---
# TasklistApp Deployment Playbook
# Deploys application to provisioned VMs
# Run after provision.yml

- name: Deploy TasklistApp to VM(s)
  hosts: vm_servers
  become: yes
  gather_facts: no

  vars:
    app_user: "{{ app_user }}"
    app_group: "{{ app_group }}"
    app_base_dir: "{{ app_base_dir }}"
    service_name: "{{ service_name }}"
    # Local paths (where JAR is located on Ansible controller)
    local_jar_path: "../app/target/tasklist-api-*.jar"

  tasks:
    # Copy JAR file from local machine to VM
    - name: Copy application JAR to VM
      copy:
        src: "{{ local_jar_path }}"
        dest: "{{ app_base_dir }}/app/tasklist-api.jar"
        owner: "{{ app_user }}"
        group: "{{ app_group }}"
        mode: '0644'
      register: jar_copy

    # Update application properties with current database settings
    - name: Update application configuration
      lineinfile:
        path: "{{ app_base_dir }}/app/application.properties"
        regexp: "^spring.datasource.url="
        line: "spring.datasource.url=jdbc:postgresql://{{ db_host }}:{{ db_port }}/{{ db_name }}"
      when: jar_copy.changed

    - name: Update database username
      lineinfile:
        path: "{{ app_base_dir }}/app/application.properties"
        regexp: "^spring.datasource.username="
        line: "spring.datasource.username={{ db_user }}"
      when: jar_copy.changed

    - name: Update database password
      lineinfile:
        path: "{{ app_base_dir }}/app/application.properties"
        regexp: "^spring.datasource.password="
        line: "spring.datasource.password={{ db_password }}"
      when: jar_copy.changed

    # Restart service to pick up new JAR
    - name: Restart tasklist service
      systemd:
        name: "{{ service_name }}"
        state: restarted
      when: jar_copy.changed

    - name: Wait for service to be ready
      systemd:
        name: "{{ service_name }}"
      register: service_status
      until: service_status.status.ActiveState == "active"
      retries: 5
      delay: 10
      when: jar_copy.changed

    # Verify deployment
    - name: Check service status
      systemd:
        name: "{{ service_name }}"
      register: final_status

    - name: Display deployment status
      debug:
        msg: |
          Deployment completed!

          Service Status: {{ final_status.status.ActiveState }}
          Application JAR: {{ app_base_dir }}/app/tasklist-api.jar
          Log File: {{ app_base_dir }}/logs/tasklist.log
          Service URL: http://{{ ansible_host }}:8080/api/tasks

          {% if final_status.status.ActiveState == "active" %}
          ✅ Application deployed and running successfully!
          {% else %}
          ⚠️ Service may need manual intervention. Check logs: sudo journalctl -u {{ service_name }} -f
          {% endif %}
