apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgresdb-deployment
  namespace: tasklistapp
  labels:
    app: postgresdb
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/instance: postgresdb
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: tasklistapp
    app.kubernetes.io/managed-by: argocd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgresdb
  template:
    metadata:
      labels:
        app: postgresdb
        app.kubernetes.io/name: postgresql
        app.kubernetes.io/instance: postgresdb
        app.kubernetes.io/component: database
        app.kubernetes.io/part-of: tasklistapp
        app.kubernetes.io/managed-by: argocd
    spec:
      containers:
      - name: postgresql
        # Use your GHCR custom image here
        image: ghcr.io/slmakomazi/tasklistapp:db-latest
        imagePullPolicy: Always
        ports:
        - name: postgresql
          containerPort: 5432
          protocol: TCP
        env:
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: postgresdb-config
              key: POSTGRES_DB
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: tasklistapp-secrets
              key: db-username
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: tasklistapp-secrets
              key: db-password
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        - name: POSTGRES_INITDB_ARGS
          value: "--data-checksums"
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
        livenessProbe:
          exec:
            command:
              - pg_isready
              - -U
              - postgres
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
              - pg_isready
              - -U
              - postgres
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 200m
            memory: 512Mi
      volumes:
      - name: postgres-storage
        persistentVolumeClaim:
          claimName: postgresdb-pvc

      # THIS tells Kubernetes how to pull your GHCR image
      imagePullSecrets:
        - name: ghcr-secret
