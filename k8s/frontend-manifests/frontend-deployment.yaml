apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: tasklistapp
  labels:
    app: tasklistapp
    tier: frontend
    app.kubernetes.io/name: tasklistapp-frontend
    app.kubernetes.io/instance: tasklistapp-frontend
    app.kubernetes.io/component: frontend
    app.kubernetes.io/part-of: tasklistapp
    app.kubernetes.io/managed-by: argocd
spec:
  replicas: 2
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: tasklistapp
      tier: frontend
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: tasklistapp
        tier: frontend
        app.kubernetes.io/name: tasklistapp-frontend
        app.kubernetes.io/instance: tasklistapp-frontend
        app.kubernetes.io/version: "1.0.0"
    spec:
      serviceAccountName: tasklistapp-sa
      imagePullSecrets:
        - name: ghcr-secret
      containers:
      - name: frontend
        image: ghcr.io/slmakomazi/tasklistapp-frontend:latest
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        envFrom:
        - configMapRef:
            name: frontend-config
        env:
        - name: tasklistapi-service
          value: "http://tasklistapi-service:8080"
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "500m"
            memory: "512Mi"
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          capabilities:
            drop: ["ALL"]
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
          readOnly: true
        - name: nginx-config
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: default.conf
          readOnly: true
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 40
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 5
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 3
      volumes:
      - name: nginx-config
        configMap:
          name: nginx-config
          items:
          - key: nginx.conf
            path: nginx.conf
          - key: default.conf
            path: default.conf
      securityContext:
        fsGroup: 1000
      restartPolicy: Always
      dnsPolicy: ClusterFirst
