{
  "info": {
    "name": "TasklistApp API Collection",
    "description": "Complete API collection for TasklistApp - A modern task management application built with Spring Boot and PostgreSQL. This collection includes all CRUD operations for task management with comprehensive examples and testing capabilities.",
    "version": "1.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "auth": {
    "type": "noauth"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:8080",
      "type": "string",
      "description": "Base URL for the TasklistApp API"
    },
    {
      "key": "taskId",
      "value": "1",
      "type": "string",
      "description": "Task ID for GET, PUT, DELETE operations"
    }
  ],
  "item": [
    {
      "name": "Application Health",
      "item": [
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/actuator/health",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "actuator",
                "health"
              ]
            },
            "description": "Check if the application is running and healthy"
          },
          "response": [
            {
              "name": "Health Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/actuator/health",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "actuator",
                    "health"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": \"UP\",\n    \"components\": {\n        \"db\": {\n            \"status\": \"UP\",\n            \"details\": {\n                \"database\": \"PostgreSQL\",\n                \"validationQuery\": \"isValid()\"\n            }\n        },\n        \"diskSpace\": {\n            \"status\": \"UP\",\n            \"details\": {\n                \"total\": 1073741824,\n                \"free\": 1073741824,\n                \"threshold\": 10485760\n            }\n        },\n        \"ping\": {\n            \"status\": \"UP\"\n        }\n    }\n}"
            }
          ]
        }
      ],
      "description": "Application health and monitoring endpoints"
    },
    {
      "name": "Task Management",
      "item": [
        {
          "name": "Get All Tasks",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/tasks",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "tasks"
              ]
            },
            "description": "Retrieve all tasks from the database"
          },
          "response": [
            {
              "name": "Tasks List",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/tasks",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "tasks"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "[\n    {\n        \"id\": 1,\n        \"title\": \"Complete project setup\",\n        \"description\": \"Set up the complete TasklistApp with Docker and documentation\",\n        \"completed\": false,\n        \"dueDate\": \"2024-12-31\",\n        \"createdAt\": \"2024-10-08T18:34:39\",\n        \"updatedAt\": \"2024-10-08T18:34:39\"\n    },\n    {\n        \"id\": 2,\n        \"title\": \"Create API documentation\",\n        \"description\": \"Document all API endpoints and create Postman collection\",\n        \"completed\": false,\n        \"dueDate\": \"2024-12-31\",\n        \"createdAt\": \"2024-10-08T18:35:00\",\n        \"updatedAt\": \"2024-10-08T18:35:00\"\n    }\n]"
            }
          ]
        },
        {
          "name": "Create New Task",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"title\": \"Learn Spring Boot\",\n    \"description\": \"Complete Spring Boot tutorial and build REST API\",\n    \"completed\": false,\n    \"dueDate\": \"2024-12-31\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/api/tasks",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "tasks"
              ]
            },
            "description": "Create a new task in the system"
          },
          "response": [
            {
              "name": "Task Created",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"title\": \"Learn Spring Boot\",\n    \"description\": \"Complete Spring Boot tutorial and build REST API\",\n    \"completed\": false,\n    \"dueDate\": \"2024-12-31\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/api/tasks",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "tasks"
                  ]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n    \"id\": 3,\n    \"title\": \"Learn Spring Boot\",\n    \"description\": \"Complete Spring Boot tutorial and build REST API\",\n    \"completed\": false,\n    \"dueDate\": \"2024-12-31\",\n    \"createdAt\": \"2024-10-08T18:40:00\",\n    \"updatedAt\": \"2024-10-08T18:40:00\"\n}"
            }
          ]
        },
        {
          "name": "Get Task by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/tasks/{{taskId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "tasks",
                "{{taskId}}"
              ]
            },
            "description": "Retrieve a specific task by its ID"
          },
          "response": [
            {
              "name": "Single Task",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/tasks/1",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "tasks",
                    "1"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n    \"id\": 1,\n    \"title\": \"Complete project setup\",\n    \"description\": \"Set up the complete TasklistApp with Docker and documentation\",\n    \"completed\": false,\n    \"dueDate\": \"2024-12-31\",\n    \"createdAt\": \"2024-10-08T18:34:39\",\n    \"updatedAt\": \"2024-10-08T18:34:39\"\n}"
            }
          ]
        },
        {
          "name": "Update Task",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"title\": \"Complete project setup - UPDATED\",\n    \"description\": \"Set up the complete TasklistApp with Docker and documentation - Task marked as completed\",\n    \"completed\": true,\n    \"dueDate\": \"2024-12-31\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/api/tasks/{{taskId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "tasks",
                "{{taskId}}"
              ]
            },
            "description": "Update an existing task by its ID"
          },
          "response": [
            {
              "name": "Task Updated",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"title\": \"Complete project setup - UPDATED\",\n    \"description\": \"Set up the complete TasklistApp with Docker and documentation - Task marked as completed\",\n    \"completed\": true,\n    \"dueDate\": \"2024-12-31\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/api/tasks/1",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "tasks",
                    "1"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n    \"id\": 1,\n    \"title\": \"Complete project setup - UPDATED\",\n    \"description\": \"Set up the complete TasklistApp with Docker and documentation - Task marked as completed\",\n    \"completed\": true,\n    \"dueDate\": \"2024-12-31\",\n    \"createdAt\": \"2024-10-08T18:34:39\",\n    \"updatedAt\": \"2024-10-08T18:45:00\"\n}"
            }
          ]
        },
        {
          "name": "Delete Task",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/tasks/{{taskId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "tasks",
                "{{taskId}}"
              ]
            },
            "description": "Delete a task by its ID"
          },
          "response": [
            {
              "name": "Task Deleted",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/tasks/1",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "tasks",
                    "1"
                  ]
                }
              },
              "status": "No Content",
              "code": 204,
              "_postman_previewlanguage": "text",
              "header": [],
              "cookie": [],
              "body": ""
            }
          ]
        }
      ],
      "description": "Complete CRUD operations for task management"
    },
    {
      "name": "API Documentation",
      "item": [
        {
          "name": "Swagger UI",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/swagger-ui.html",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "swagger-ui.html"
              ]
            },
            "description": "Access the interactive Swagger UI for API documentation and testing"
          }
        },
        {
          "name": "OpenAPI Specification",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api-docs",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api-docs"
              ]
            },
            "description": "Get the OpenAPI 3.0 specification for the API"
          }
        }
      ],
      "description": "API documentation and specification access"
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Set current timestamp for requests",
          "pm.collectionVariables.set(\"timestamp\", new Date().toISOString());",
          "",
          "// Log request details",
          "console.log(\"Making request to: \" + pm.request.url.toString());"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Basic response validation",
          "pm.test(\"Status code is success\", function () {",
          "    pm.response.to.have.status(200);",
          "});",
          "",
          "// Response time validation",
          "pm.test(\"Response time is acceptable\", function () {",
          "    pm.expect(pm.response.responseTime).to.be.below(5000);",
          "});",
          "",
          "// Content type validation",
          "pm.test(\"Content-Type is JSON\", function () {",
          "    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
          "});"
        ]
      }
    }
  ]
}
