name: 🔨 Build, Test, and Push Docker Image

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:16
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: testdb
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test

    steps:
      - name: 🛑 Checkout Code
        uses: actions/checkout@v4
        
      - name: 💾 Cache Maven Dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: ⚙️ Set up Java 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: 📦 Build and Run Unit Tests
        run: mvn -B clean package

      - name: 🧪 Run Integration Tests (Requires DB Service)
        run: |
          mvn -B test -Dspring.datasource.url="jdbc:postgresql://localhost:5432/testdb" \
            -Dspring.datasource.username="test" \
            -Dspring.datasource.password="test"
            
      - name: 🐳 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🔑 Login to Docker Hub
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      - name: 🏗️ Build and Push Docker Image to Hub
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v5
        with:
          context: ./app
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/tasklistapp:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max